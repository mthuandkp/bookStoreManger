/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.QLHoaDon;

import BUS.ChiTietHoaDonBus;
import BUS.HoaDonBus;
import DTO.ChiTietHoaDon;
import DTO.HoaDon;
import DTO.NhanVien;
import ProcessingFunction.WriteExcel;
import ProcessingFunction.WritePdf;
import Test.*;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MINHTHUAN
 */
public class QuanLyHoaDon extends javax.swing.JPanel {
    HoaDonBus hdbus = new HoaDonBus();
    ChiTietHoaDonBus cthdbus = new ChiTietHoaDonBus();
    WritePdf write = new WritePdf();
    NhanVien nhanvien = null;
    /**
     * Creates new form DefaultPanel
     */
    public QuanLyHoaDon() {
        initComponents();
        initialization();
        
    }
    
     public QuanLyHoaDon(NhanVien nv) {
         setNhanvien(nv);
        initComponents();
        initialization();
        performEvent(nv);
    }

    public NhanVien getNhanvien() {
        return nhanvien;
    }

    public void setNhanvien(NhanVien nhanvien) {
        this.nhanvien = nhanvien;
    }
     
     

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        statisticalBtn = new javax.swing.JButton();
        exportPdfBtn = new javax.swing.JButton();
        exportExcelBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        exportPdfBtn1 = new javax.swing.JButton();
        exportPdfBtn2 = new javax.swing.JButton();
        editBtn1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1120, 660));
        setPreferredSize(new java.awt.Dimension(1120, 640));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        table.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(table);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 1050, 450));

        statisticalBtn.setBackground(new java.awt.Color(255, 255, 255));
        statisticalBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        statisticalBtn.setForeground(new java.awt.Color(153, 51, 255));
        statisticalBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/area_chart_48px.png"))); // NOI18N
        statisticalBtn.setText("Thống kê");
        statisticalBtn.setBorder(null);
        add(statisticalBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 560, 180, -1));

        exportPdfBtn.setBackground(new java.awt.Color(255, 255, 255));
        exportPdfBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        exportPdfBtn.setForeground(new java.awt.Color(153, 51, 255));
        exportPdfBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/pdf_48px.png"))); // NOI18N
        exportPdfBtn.setText("Xuất PDF");
        exportPdfBtn.setBorder(null);
        add(exportPdfBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 560, 180, -1));

        exportExcelBtn.setBackground(new java.awt.Color(255, 255, 255));
        exportExcelBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        exportExcelBtn.setForeground(new java.awt.Color(153, 51, 255));
        exportExcelBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/export_csv_60px.png"))); // NOI18N
        exportExcelBtn.setText("Xuất Excel");
        exportExcelBtn.setBorder(null);
        add(exportExcelBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 560, 180, -1));

        addBtn.setBackground(new java.awt.Color(255, 255, 255));
        addBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        addBtn.setForeground(new java.awt.Color(153, 51, 255));
        addBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/add.png"))); // NOI18N
        addBtn.setText("Thêm");
        addBtn.setBorder(null);
        add(addBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 180, -1));

        exportPdfBtn1.setBackground(new java.awt.Color(255, 255, 255));
        exportPdfBtn1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        exportPdfBtn1.setForeground(new java.awt.Color(153, 51, 255));
        exportPdfBtn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/more_details_50px.png"))); // NOI18N
        exportPdfBtn1.setText("Xem chi tiết");
        exportPdfBtn1.setBorder(null);
        add(exportPdfBtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, 193, -1));

        exportPdfBtn2.setBackground(new java.awt.Color(255, 255, 255));
        exportPdfBtn2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        exportPdfBtn2.setForeground(new java.awt.Color(153, 51, 255));
        exportPdfBtn2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/search_50px.png"))); // NOI18N
        exportPdfBtn2.setText("Tìm Kiếm");
        exportPdfBtn2.setBorder(null);
        add(exportPdfBtn2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 20, 180, -1));

        editBtn1.setBackground(new java.awt.Color(255, 255, 255));
        editBtn1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        editBtn1.setForeground(new java.awt.Color(153, 51, 255));
        editBtn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/refresh_64px.png"))); // NOI18N
        editBtn1.setText("Cập nhật");
        editBtn1.setBorder(null);
        add(editBtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 20, 180, -1));
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton editBtn1;
    private javax.swing.JButton exportExcelBtn;
    private javax.swing.JButton exportPdfBtn;
    private javax.swing.JButton exportPdfBtn1;
    private javax.swing.JButton exportPdfBtn2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton statisticalBtn;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

    private void initialization() {
        //Define size for JPanel
        this.setSize(1120, 660);
        initTable();
        loadTableData();
    }

    private void performEvent(NhanVien nv) {
        ActionListener ac = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                switch(e.getActionCommand()){
                    case "Thêm":{
                        new ThemHoaDon(nv).setVisible(true);
                        break;
                    }
                    case "Xem chi tiết":{
                        int select = table.getSelectedRow();
                        if(select  < 0){
                            JOptionPane.showMessageDialog(null, "Vui lòng chọn hóa đơn để xem chi tiết");
                            return;
                        }
                        int idBill = Integer.valueOf(String.valueOf(table.getValueAt(select, 0)));
                        HoaDon hd = hdbus.getBillById(idBill);
                        ArrayList<ChiTietHoaDon> data = cthdbus.getDataById(idBill);
                        new XemChiTiet(hd,data,getNhanvien()).setVisible(true);
                        break;
                    }
                    case "Tìm Kiếm":{
                        new TimKiem().setVisible(true);
                        break;
                    }
                    case "Cập nhật":{
                        loadTableData();
                        JOptionPane.showMessageDialog(null, "Đã reload");
                        break;
                    }
                    case "Thống kê":{
                        new ThongKeHD().setVisible(true);
                        break;
                    }
                    case "Xuất PDF":{
                        int select = table.getSelectedRow();
                        if(select  < 0){
                            JOptionPane.showMessageDialog(null, "Vui lòng chọn hóa đơn để xuất pdf");
                            return;
                        }
                        int idBill = Integer.valueOf(String.valueOf(table.getValueAt(select, 0)));
                        write.writeBill(idBill);
                        break;
                    }
                    case "Xuất Excel":{
                        int select = table.getSelectedRow();
                        if(select  < 0){
                            JOptionPane.showMessageDialog(null, "Vui lòng chọn hóa đơn để xuất excel");
                            return;
                        }
                        
                        int idBill = Integer.valueOf(String.valueOf(table.getValueAt(select, 0)));
                        HoaDon hd = hdbus.getBillById(idBill);
                        ArrayList<ChiTietHoaDon> data = cthdbus.getDataById(idBill);
                        WriteExcel writeEx = new WriteExcel();
                        writeEx.WriteBill(hd, data);
                        break;
                    }
                }
            }
        };
        
        Arrays.stream(this.getComponents()).forEach(c ->{
            if(c instanceof JButton){
                ((JButton)c).addActionListener(ac);
                ((JButton)c).setActionCommand(((JButton)c).getActionCommand());
            }
        });
    }

    private void initTable() {
        String []header = {"Mã hóa đơn","Mã nhân viên","Mã khách hàng","Mã khuyến mãi","Ngày lập","Giờ lập","Trạng Thái"};
        DefaultTableModel defaults = (DefaultTableModel) table.getModel();
        Arrays.stream(header).forEach(s -> {
            defaults.addColumn(s);
        });

        table.setRowHeight(25);
    }

    private void loadTableData() {
        removeAllTableData();
        ArrayList<HoaDon> data = hdbus.getAllData();
        DefaultTableModel defaults = (DefaultTableModel) table.getModel();
        
        for(HoaDon hd : data){
            Object []obj = new Object[7];
            obj[0] = hd.getMaHoaDon();
            obj[1] = hd.getMaNhanVien();
            obj[2] = hd.getMaKhachHang();
            obj[3] = hd.getMaKhuyenMai();
            obj[4] = hd.getNgayLap().toString();
            obj[5] = hd.getGioLap().toString();
            switch(hd.getTrangThai()){
                case 0:{
                    obj[6] = "Đang chờ xử lý";
                    break;
                }
                case 1:{
                    obj[6] = "Đã xử lý";
                    break;
                }
                case 2:{
                    obj[6] = "Đã nhận được";
                    break;
                }
            }
            defaults.addRow(obj);
        }
    }

    private void removeAllTableData() {
        DefaultTableModel defaults = (DefaultTableModel) table.getModel();
        for (int i = defaults.getRowCount() - 1; i >= 0; i--) {
            defaults.removeRow(i);
        }
    }
}
