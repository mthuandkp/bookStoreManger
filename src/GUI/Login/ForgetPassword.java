/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.Login;

import BUS.TaiKhoanBus;
import ProcessingFunction.SendEmail;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;

/**
 *
 * @author MINHTHUAN
 */
public class ForgetPassword extends javax.swing.JFrame {
    TaiKhoanBus tkbus = new TaiKhoanBus();
    private int code  = 0;
    /**
     * Creates new form ForgetPassword
     */
    public ForgetPassword() {
        initComponents();
        initialization();
        performEvent();
    }

    public int getCode() {
        return code;
    }

    public void setCode(int code) {
        this.code = code;
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        forgetPassword3 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        forgetPassword = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        forgetPassword5 = new javax.swing.JLabel();
        confirmPassword = new javax.swing.JPasswordField();
        forgetPassword2 = new javax.swing.JLabel();
        confirm = new javax.swing.JTextField();
        confirmBtn = new javax.swing.JButton();
        returnLogin = new javax.swing.JLabel();
        userIcon = new javax.swing.JLabel();
        passwordIcon2 = new javax.swing.JLabel();
        passwordIcon3 = new javax.swing.JLabel();
        passwordIcon = new javax.swing.JLabel();
        getCodeBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        background.setBackground(new java.awt.Color(255, 255, 255));
        background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        title.setBackground(new java.awt.Color(102, 102, 255));
        title.setFont(new java.awt.Font("Vni 07 WaterBrushROB", 1, 36)); // NOI18N
        title.setForeground(new java.awt.Color(204, 255, 0));
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Khôi phục mật khẩu");
        background.add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 50, 400, -1));

        forgetPassword3.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        forgetPassword3.setForeground(new java.awt.Color(255, 255, 255));
        forgetPassword3.setText("Tên tài khoản :");
        background.add(forgetPassword3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, -1, -1));

        username.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        username.setForeground(new java.awt.Color(255, 255, 255));
        username.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        background.add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, 250, 40));

        forgetPassword.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        forgetPassword.setForeground(new java.awt.Color(255, 255, 255));
        forgetPassword.setText("Mật khẩu mới:");
        background.add(forgetPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 180, -1, -1));

        password.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        password.setForeground(new java.awt.Color(255, 255, 255));
        password.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        background.add(password, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, 250, 40));

        forgetPassword5.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        forgetPassword5.setForeground(new java.awt.Color(255, 255, 255));
        forgetPassword5.setText("Xác nhận mật khẩu :");
        background.add(forgetPassword5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, -1, -1));

        confirmPassword.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        confirmPassword.setForeground(new java.awt.Color(255, 255, 255));
        confirmPassword.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        background.add(confirmPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 290, 250, 40));

        forgetPassword2.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        forgetPassword2.setForeground(new java.awt.Color(255, 255, 255));
        forgetPassword2.setText("Mã phục hồi :");
        background.add(forgetPassword2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 340, -1, -1));

        confirm.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        confirm.setForeground(new java.awt.Color(255, 255, 255));
        confirm.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        background.add(confirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 370, 250, 40));

        confirmBtn.setBackground(new java.awt.Color(255, 255, 255));
        confirmBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        confirmBtn.setForeground(new java.awt.Color(153, 51, 255));
        confirmBtn.setText("Khôi phục");
        background.add(confirmBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 440, 170, 50));

        returnLogin.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        returnLogin.setForeground(new java.awt.Color(0, 0, 204));
        returnLogin.setText("Trở về đăng nhập");
        background.add(returnLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 500, -1, -1));

        userIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/user_48px.png"))); // NOI18N
        background.add(userIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 40, 50));

        passwordIcon2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/key_2_100px.png"))); // NOI18N
        background.add(passwordIcon2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 40, 50));

        passwordIcon3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/checked_30px.png"))); // NOI18N
        background.add(passwordIcon3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 40, 50));

        passwordIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/data_matrix_code_50px.png"))); // NOI18N
        background.add(passwordIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 30, 30));

        getCodeBtn.setBackground(new java.awt.Color(153, 102, 255));
        getCodeBtn.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        getCodeBtn.setForeground(new java.awt.Color(255, 51, 51));
        getCodeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/code_26px.png"))); // NOI18N
        background.add(getCodeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 370, 40, 40));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Lấy Mã");
        background.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 410, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/1092593.png"))); // NOI18N
        background.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 530));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ForgetPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ForgetPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ForgetPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ForgetPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ForgetPassword().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel background;
    private javax.swing.JTextField confirm;
    private javax.swing.JButton confirmBtn;
    private javax.swing.JPasswordField confirmPassword;
    private javax.swing.JLabel forgetPassword;
    private javax.swing.JLabel forgetPassword2;
    private javax.swing.JLabel forgetPassword3;
    private javax.swing.JLabel forgetPassword5;
    private javax.swing.JButton getCodeBtn;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField password;
    private javax.swing.JLabel passwordIcon;
    private javax.swing.JLabel passwordIcon2;
    private javax.swing.JLabel passwordIcon3;
    private javax.swing.JLabel returnLogin;
    private javax.swing.JLabel title;
    private javax.swing.JLabel userIcon;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables

    private void initialization() {
        username.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.WHITE));
        password.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.WHITE));
        confirmPassword.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.WHITE));
        confirm.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.WHITE));
        
        username.setBackground(new Color(0,0,0,0));
        password.setBackground(new Color(0,0,0,0));
        confirmPassword.setBackground(new Color(0,0,0,0));
        confirm.setBackground(new Color(0,0,0,0));
        
        this.setLocationRelativeTo(null);
    }

    private void performEvent() {
        returnLogin.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                new Login().setVisible(true);
                dispose();
            }
        });
        getCodeBtn.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Random rd = new Random();
                setCode(rd.nextInt(999999-100000+1) + 100000);
                String html = "<div style=\"width: 80%;margin-left: 10%;background-color: rgb(226, 224, 224);border-radius: 2rem;height: 20rem;\">\n" +
                "<div style=\"background-color: cadetblue;height: 4rem;border-top-left-radius: 2rem;border-top-right-radius: 2rem;\">\n" +
                "<h1 style=\"width: 100%;text-align: center;color: rgb(255, 255, 255);padding-top: 1rem;\">LAY MA XAC NHAN</h1>\n" +
                "</div>\n" +
                "<h1 style=\"width: 100%;text-align: center;color:blue;\">MA XAC NHAN : "+getCode()+"</h1>\n" +
                "</div>";
                try {
                    SendEmail send = new SendEmail(username.getText(), "", html);
                    send.run();
                } catch (Exception ex) {
                    Logger.getLogger(Register_1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        confirmBtn.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if(checkInput() == false){
                    return;
                }
                if(tkbus.updatePassword(username.getText(), String.valueOf(password.getPassword()))){
                    JOptionPane.showMessageDialog(null, "Khôi phục thành công.Vui lòng đăng nhập lại");
                    new Login().setVisible(true);
                    dispose();
                }
            }

            private boolean checkInput() {
                if(username.getText().compareTo("") == 0){
                    JOptionPane.showMessageDialog(null, "Tên tài khoản không được để trống");
                    return false;
                }
                if(username.getText().contains("@gmail.com") == false){
                    JOptionPane.showMessageDialog(null, "Tài khoản phải là Email");
                }
                if(tkbus.isExistUser(username.getText()) == false){
                    JOptionPane.showMessageDialog(null, "Tài khoản không tồn tại");
                    return false;
                }
                if(String.valueOf(password.getPassword()).compareTo("") == 0){
                    JOptionPane.showMessageDialog(null, "Chưa nhập mật khẩu");
                    return false;
                }
                if(String.valueOf(confirmPassword.getPassword()).compareTo("") == 0){
                    JOptionPane.showMessageDialog(null, "Chưa nhập mật khẩu");
                    return false;
                }
                if(String.valueOf(password.getPassword()).compareTo(String.valueOf(confirmPassword.getPassword())) != 0){
                    JOptionPane.showMessageDialog(null, "Mật khẩu mới và xác nhận mật khẩu không khớp");
                    return false;
                }
                try {
                    if(Integer.valueOf(confirm.getText()) != getCode()){
                        throw  new Exception();
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Mã xác nhận không chính xác");
                    return false;
                }
                return true;
            }
        });
    }
}
