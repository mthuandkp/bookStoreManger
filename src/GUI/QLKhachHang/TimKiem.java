/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.QLKhachHang;

import BUS.KhachHangBus;
import DTO.KhachHang;
import GUI.QLTaiKhoanKH.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MINHTHUAN
 */
public class TimKiem extends javax.swing.JFrame {

    KhachHangBus khbus = new KhachHangBus();

    /**
     * Creates new form TimKiem
     */
    public TimKiem() {
        initComponents();
        initialization();
        performEvent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        idValue = new javax.swing.JComboBox<>();
        nameValue = new javax.swing.JTextField();
        nameCheck = new javax.swing.JCheckBox();
        idCheck = new javax.swing.JCheckBox();
        statusCheck = new javax.swing.JCheckBox();
        statusValue = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        dateValue = new javax.swing.JTextField();
        dateCheck = new javax.swing.JCheckBox();
        phoneCheck = new javax.swing.JCheckBox();
        phoneValue = new javax.swing.JTextField();
        addressCheck = new javax.swing.JCheckBox();
        addressValue = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        searchbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Tìm kiếm khách hàng");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1140, 90));

        idValue.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jPanel1.add(idValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 100, 270, -1));

        nameValue.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jPanel1.add(nameValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 170, 270, -1));

        nameCheck.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        nameCheck.setText("Tên khách hàng");
        jPanel1.add(nameCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, -1, -1));

        idCheck.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        idCheck.setText("Mã khách hàng");
        jPanel1.add(idCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, -1));

        statusCheck.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        statusCheck.setText("Trạng thái");
        jPanel1.add(statusCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, -1));

        statusValue.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jPanel1.add(statusValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 230, 270, -1));

        table.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(table);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 1040, 350));

        dateValue.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jPanel1.add(dateValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 100, 270, -1));

        dateCheck.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        dateCheck.setText("Ngày Sinh");
        jPanel1.add(dateCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 100, -1, -1));

        phoneCheck.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        phoneCheck.setText("SĐT");
        jPanel1.add(phoneCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 160, -1, -1));

        phoneValue.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jPanel1.add(phoneValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 160, 270, -1));

        addressCheck.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        addressCheck.setText("Địa chỉ");
        jPanel1.add(addressCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 220, -1, -1));

        addressValue.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jPanel1.add(addressValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 220, 270, -1));

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jButton1.setText("Bỏ chọn");
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 300, 160, -1));

        searchbtn.setBackground(new java.awt.Color(255, 255, 255));
        searchbtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        searchbtn.setForeground(new java.awt.Color(102, 102, 102));
        searchbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/search_50px.png"))); // NOI18N
        searchbtn.setText("Tìm Kiếm");
        searchbtn.setBorder(null);
        jPanel1.add(searchbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 300, 180, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1141, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 737, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TimKiem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TimKiem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TimKiem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TimKiem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TimKiem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox addressCheck;
    private javax.swing.JTextField addressValue;
    private javax.swing.JCheckBox dateCheck;
    private javax.swing.JTextField dateValue;
    private javax.swing.JCheckBox idCheck;
    private javax.swing.JComboBox<String> idValue;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox nameCheck;
    private javax.swing.JTextField nameValue;
    private javax.swing.JCheckBox phoneCheck;
    private javax.swing.JTextField phoneValue;
    private javax.swing.JButton searchbtn;
    private javax.swing.JCheckBox statusCheck;
    private javax.swing.JComboBox<String> statusValue;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

    private void initialization() {
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(HIDE_ON_CLOSE);
        loadCombobox();
        initTable();
    }

    private void performEvent() {
        searchbtn.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int id = -1;
                String name = "";
                int status = -1;
                String date = "";
                String phone = "";
                String address = "";

                if (nameCheck.isSelected() && nameValue.getText().compareTo("") == 0) {
                    JOptionPane.showMessageDialog(null, "Chưa nhập tên khách hàng");
                    return;
                }

                if (dateCheck.isSelected() && dateValue.getText().compareTo("") == 0) {
                    JOptionPane.showMessageDialog(null, "Chưa nhập ngày sinh");
                    return;
                }
                if (dateCheck.isSelected()) {
                    try {
                        LocalDate.parse(dateValue.getText(), DateTimeFormatter.ofPattern("yyyy-MM-dd"));
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, "Ngày sinh không hợp lệ (yyyy-mm-dd)");
                        return;
                    }
                }
                if (phoneCheck.isSelected() && phoneValue.getText().compareTo("") == 0) {
                    JOptionPane.showMessageDialog(null, "Chưa nhập sdt");
                    return;
                }
                if (phoneCheck.isSelected()) {
                    try {
                        Integer.valueOf(phoneValue.getText());
                        
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, "Số điện thoại không chứa chữ cái và ký tự đặc biệt");
                        return;
                    }
                }
                if (addressCheck.isSelected() && addressValue.getText().compareTo("") == 0) {
                    JOptionPane.showMessageDialog(null, "Chưa nhập địa chỉ");
                    return;
                }
                if (idCheck.isSelected()) {
                    id = Integer.valueOf(String.valueOf(idValue.getSelectedItem()));
                }
                if (nameCheck.isSelected()) {
                    name = nameValue.getText();
                }
                if (statusCheck.isSelected()) {
                    status = statusValue.getSelectedIndex();
                }
                if (dateCheck.isSelected()) {
                    date = dateValue.getText();
                }
                if (phoneCheck.isSelected()) {
                    phone = phoneValue.getText();
                }
                if (addressCheck.isSelected()) {
                    address = addressValue.getText();
                }

                ArrayList<KhachHang> data = khbus.searchData(id, name, status, date, phone, address);
                loadTable(data);
            }

        });
    }

    private void loadCombobox() {
        ArrayList<KhachHang> data = khbus.getAllData();

        for (KhachHang kh : data) {
            idValue.addItem(String.valueOf(kh.getMaKhachHang()));
        }

        statusValue.addItem("Đang hoạt động");
        statusValue.addItem("Bị khóa");
    }

    private void initTable() {
        String[] header = {"Mã khách hàng", "Tên khách hàng", "Ngày sinh", "Địa chỉ", "Sdt", "Trạng Thái"};
        DefaultTableModel defaults = (DefaultTableModel) table.getModel();
        Arrays.stream(header).forEach(s -> {
            defaults.addColumn(s);
        });

        table.setRowHeight(25);
    }

    private void removeAllTableData() {
        DefaultTableModel defaults = (DefaultTableModel) table.getModel();
        for (int i = defaults.getRowCount() - 1; i >= 0; i--) {
            defaults.removeRow(i);
        }
    }

    private void loadTable(ArrayList<KhachHang> data) {
        DefaultTableModel defaults = (DefaultTableModel) table.getModel();
        removeAllTableData();
        for(KhachHang arr: data)
        {
            Object [] arrO = new Object[6];
            arrO[0] = arr.getMaKhachHang();
            arrO[1] = arr.getTenKhachHang();
            arrO[2] = arr.getNgaySinh().toString();
            arrO[3] = arr.getDiaChi();
            arrO[4] = arr.getSDT();
            arrO[5] = arr.isTrangThai();
            defaults.addRow(arrO);
        }
    }
}
