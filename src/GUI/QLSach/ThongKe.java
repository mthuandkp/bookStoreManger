/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.QLSach;

import BUS.SachBus;
import BUS.TheLoaiBus;
import DTO.Sach;
import java.awt.BorderLayout;
import java.awt.Color;
import java.util.ArrayList;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author MINHTHUAN
 */
public class ThongKe extends javax.swing.JFrame {
    SachBus sachbus = new SachBus();
    TheLoaiBus theloaibus = new TheLoaiBus();
    /**
     * Creates new form ThongKe
     */
    public ThongKe() {
        initComponents();
        barChart();
        lineChart();
        ProcessingFunction.ThongKe.pieChart(sachbus.getDataForPieChart(), "Thống kê số lượng sách", pieChart);
        this.setLocationRelativeTo(null);
        this.setBackground(Color.WHITE);
        this.setDefaultCloseOperation(HIDE_ON_CLOSE);
        
    }
    
    public void barChart(){
        ArrayList<Sach> data = sachbus.getAllSachNotDuplicate();
        DefaultCategoryDataset barChartData = new DefaultCategoryDataset();
        for(Sach s : data){
            barChartData.setValue(s.getSoLuong(), "", s.getTenSach());
        }
        
        JFreeChart barChart = ChartFactory.createBarChart(
                "Thống kê sách theo số lượng",
                "Tên Sách",
                "Số Lượng",
                barChartData,
                PlotOrientation.VERTICAL,
                false,
                true,
                false
        );
        CategoryPlot barchrt = barChart.getCategoryPlot();
        barchrt.setRangeGridlinePaint(Color.BLUE);
        ChartPanel barPanel = new ChartPanel(barChart);
        barPanel.setVisible(true);
        this.barChart.removeAll();
        this.barChart.add(barPanel);
    }
    
     public void lineChart(){
        ArrayList<Sach> data = sachbus.getAllSachNotDuplicate();
        DefaultCategoryDataset barChartData = new DefaultCategoryDataset();
        for(Sach s : data){
            barChartData.setValue(s.getGia(), "", s.getTenSach());
        }
        
        JFreeChart barChart = ChartFactory.createLineChart(
            "Thống kê sách theo giá bán",
            "Tên Sách",
            "Giá Bán",
            barChartData,
            PlotOrientation.VERTICAL,
            false,
            true,
            false
        );
        CategoryPlot barchrt = barChart.getCategoryPlot();
        barchrt.setRangeGridlinePaint(Color.BLUE);
        ChartPanel barPanel = new ChartPanel(barChart);
        barPanel.setVisible(true);
        this.lineChart.removeAll();
        this.lineChart.add(barPanel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        lineChart = new javax.swing.JPanel();
        barChart = new javax.swing.JPanel();
        pieChart = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        background.setBackground(new java.awt.Color(204, 204, 204));

        lineChart.setBackground(new java.awt.Color(255, 255, 255));
        lineChart.setLayout(new java.awt.BorderLayout());

        barChart.setBackground(new java.awt.Color(255, 255, 255));
        barChart.setLayout(new java.awt.BorderLayout());

        pieChart.setBackground(new java.awt.Color(255, 255, 255));
        pieChart.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lineChart, javax.swing.GroupLayout.DEFAULT_SIZE, 912, Short.MAX_VALUE)
                    .addComponent(barChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pieChart, javax.swing.GroupLayout.DEFAULT_SIZE, 547, Short.MAX_VALUE))
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addComponent(lineChart, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(barChart, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE))
            .addComponent(pieChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThongKe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel background;
    private javax.swing.JPanel barChart;
    private javax.swing.JPanel lineChart;
    private javax.swing.JPanel pieChart;
    // End of variables declaration//GEN-END:variables
}
